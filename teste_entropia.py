#!/usr/bin/env python3
"""
Teste da implementa√ß√£o da Entropia de Shannon
"""

import numpy as np
from dinamica_simbolica import calcular_entropia_shannon

def testar_entropia_shannon():
    """Testa a fun√ß√£o de entropia de Shannon com diferentes cen√°rios"""
    
    print("üß™ TESTANDO ENTROPIA DE SHANNON")
    print("=" * 50)
    
    # Teste 1: Distribui√ß√£o uniforme (entropia m√°xima)
    print("\n1Ô∏è‚É£ Teste: Distribui√ß√£o Uniforme")
    freq_uniforme = {0: 0.25, 1: 0.25, 2: 0.25, 3: 0.25}
    entropia_uniforme = calcular_entropia_shannon(freq_uniforme)
    print(f"   Frequ√™ncias: {freq_uniforme}")
    print(f"   Entropia: {entropia_uniforme:.4f} bits")
    print(f"   Esperado: 2.0000 bits (m√°ximo para 4 s√≠mbolos)")
    
    # Teste 2: Distribui√ß√£o concentrada (entropia baixa)
    print("\n2Ô∏è‚É£ Teste: Distribui√ß√£o Concentrada")
    freq_concentrada = {0: 0.9, 1: 0.05, 2: 0.03, 3: 0.02}
    entropia_concentrada = calcular_entropia_shannon(freq_concentrada)
    print(f"   Frequ√™ncias: {freq_concentrada}")
    print(f"   Entropia: {entropia_concentrada:.4f} bits")
    print(f"   Esperado: ~0.5 bits (baixa entropia)")
    
    # Teste 3: Distribui√ß√£o intermedi√°ria
    print("\n3Ô∏è‚É£ Teste: Distribui√ß√£o Intermedi√°ria")
    freq_intermedia = {0: 0.5, 1: 0.3, 2: 0.15, 3: 0.05}
    entropia_intermedia = calcular_entropia_shannon(freq_intermedia)
    print(f"   Frequ√™ncias: {freq_intermedia}")
    print(f"   Entropia: {entropia_intermedia:.4f} bits")
    print(f"   Esperado: ~1.5 bits (entropia m√©dia)")
    
    # Teste 4: Caso extremo - apenas um s√≠mbolo
    print("\n4Ô∏è‚É£ Teste: Apenas um S√≠mbolo")
    freq_unico = {0: 1.0}
    entropia_unico = calcular_entropia_shannon(freq_unico)
    print(f"   Frequ√™ncias: {freq_unico}")
    print(f"   Entropia: {entropia_unico:.4f} bits")
    print(f"   Esperado: 0.0000 bits (entropia m√≠nima)")
    
    # Teste 5: Dicion√°rio vazio
    print("\n5Ô∏è‚É£ Teste: Dicion√°rio Vazio")
    freq_vazio = {}
    entropia_vazio = calcular_entropia_shannon(freq_vazio)
    print(f"   Frequ√™ncias: {freq_vazio}")
    print(f"   Entropia: {entropia_vazio:.4f} bits")
    print(f"   Esperado: 0.0000 bits")
    
    print("\n" + "=" * 50)
    print("‚úÖ Testes conclu√≠dos!")
    
    # Valida√ß√£o matem√°tica
    print("\nüìä VALIDA√á√ÉO MATEM√ÅTICA:")
    print(f"   Entropia m√°xima (4 s√≠mbolos): {np.log2(4):.4f} bits")
    print(f"   Entropia m√≠nima: 0.0000 bits")
    print(f"   Entropia uniforme calculada: {entropia_uniforme:.4f} bits")
    
    if abs(entropia_uniforme - 2.0) < 0.001:
        print("   ‚úÖ Entropia uniforme CORRETA!")
    else:
        print("   ‚ùå Entropia uniforme INCORRETA!")
    
    if entropia_unico == 0.0:
        print("   ‚úÖ Entropia m√≠nima CORRETA!")
    else:
        print("   ‚ùå Entropia m√≠nima INCORRETA!")

if __name__ == "__main__":
    testar_entropia_shannon() 